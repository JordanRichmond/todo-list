{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAqFeA,E,kDAlFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAM,CACTC,QAAQ,GACRC,KAAK,IALS,E,+CAUlB,SAAYC,EAAKC,GAEfC,KAAKC,SAAL,eACGH,EAAMC,M,qBAGX,WAEE,IAAMH,EAAQ,CACZM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,QAAQS,SAItBR,EAAI,YAAOG,KAAKL,MAAME,MAG5BA,EAAKS,KAAKV,GAGVI,KAAKC,SAAS,CACZJ,OACAD,QAAQ,O,wBAGZ,SAAWM,GAET,IAGMK,EAHI,YAAOP,KAAKL,MAAME,MAGHW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDF,KAAKC,SAAS,CAACJ,KAAMU,M,oBAEvB,WAAU,IAAD,OACP,OACE,qBAAKG,UAAU,MAAf,SACE,iDAEE,uBACA,uBACAC,KAAK,OACLC,YAAY,oBACZb,MAAOC,KAAKL,MAAMC,QAClBiB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOjB,UAEtD,wBACEkB,QAAS,kBAAM,EAAKC,WADtB,iBAKA,uBACA,6BACGlB,KAAKL,MAAME,KAAKsB,KAAI,SAAAV,GACnB,OACE,+BACGA,EAAKV,MACN,wBACEkB,QAAS,kBAAM,EAAKG,WAAWX,EAAKP,KADtC,iBAFOO,EAAKP,kB,GAlEVmB,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.612d4c8a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n  }\n\n\n  updateInput(key, value){\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n  addItem(){\n    //create iten with unique ID\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    // update state with new list and reset newItem unput\n    this.setState({\n      list,\n      newItem:\"\"\n    });\n  }\n  deleteItem(id){\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list: updatedList});\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          Add an Item...\n          <br/>\n          <input\n          type=\"text\"\n          placeholder=\"Type Item Here...\"\n          value={this.state.newItem}\n          onChange={e => this.updateInput(\"newItem\", e.target.value)}\n        />\n        <button\n          onClick={() => this.addItem()}\n        >\n          Add\n        </button>\n        <br/>\n        <ul>\n          {this.state.list.map(item => {\n            return(\n              <li key={item.id}>\n                {item.value}\n                <button\n                  onClick={() => this.deleteItem(item.id)}\n                >\n                X\n                </button>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}